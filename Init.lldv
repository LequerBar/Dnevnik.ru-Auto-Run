directory AppLequer

@:if lldev_1.2
_import Http from Base.package;
_import Http from AppLequer.package;
@:else
_import Directory from Base.package;
@:end

_import HttpLogin from @:Lib:LLdvHttp.package.http;

_import String from Base.package like String;
_import StringURLFormat from Base.package.StringManager like StringURL;

@:if lldev_1.2
// Опять переезд классов
@:link DInt = @:private import DigitalInt from Base.shared;
@:end

@:Lib(DnevnikRuApi.main)
class DnevnikRuApi(){
	/#	Setup	#/
	
	@:public fnc:DInt main(lgn<<S,pwr<<S) {
		// Урааа, разраб LLDev наконец дал возможность вызывать Base без Directory
		@:if lldev_1.2
			Http:Instance:set:(%'@User-Agent'%,Base:BrowserBase:get:random += Directory:Base:Ir);
			Http:ConnectToServer(%'dnevnik.ru'%);
		@:else
			Directory:Http:Instance:set:(%'@User-Agent'%,Directory:Base:BrowserBase:get:random += Directory:Base:Ir);
			Directory:ConnectToServer(%'dnevnik'%,%'ru'%);
		@:end
		// Звонит в main, если не успела эта библиотека инициализироваться
		HttpLogin:?main();
		
		HttpLogin:Input(lgn.format(StringURL),pwr.format(StringURL),@:if lldev_1.2 "Http:Instance" @:else "Directory:Http:Instance" @:end);
		
		HttpLogin:CallServer(@:Sync);

		@:local v:<?:boolean> checkIsReal;
		/# безопасный вызов #/
		@:if lldev_1.2
			do%		
				do:check(HttpLogin:call:latest:valid(%'usr.data'%)):{
					checkIsReal = true;	
				}
				do:error():{
					checkIsReal = false;
				}
			do%
		@:else
			do%		
				do:check(HttpLogin:latest:valid(%'usr.data'%)):{
					checkIsReal += true;	
				}
				do:error():{
					checkIsReal += false;
				}
			do%
		@:end
		$:return 0;
	}
	
}